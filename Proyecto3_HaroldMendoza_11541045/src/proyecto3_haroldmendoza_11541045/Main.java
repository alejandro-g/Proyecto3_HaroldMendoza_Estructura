/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto3_haroldmendoza_11541045;

/**
 *
 * @author Harold Mendoza
 */

import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import org.graphstream.graph.*;
import org.graphstream.graph.implementations.SingleGraph;
import org.graphstream.ui.view.Viewer;

public class Main extends javax.swing.JFrame {
    

    
    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Proyecto 3: Rutas Aereas por Harold Mendoza");
        
       // this.setExtendedState(MAXIMIZED_BOTH); 
       /*
        rutas.addNode("A");
	rutas.addNode("B");
	rutas.addNode("C");
	rutas.addEdge("AB", "A", "B", true);
        rutas.addEdge("BA", "B", "A", true);
	rutas.addEdge("BC", "B", "C", true);
	rutas.addEdge("CA", "C", "A", true);
       */
       // rutas.display();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        b_VueloCorto = new javax.swing.JButton();
        b_VueloBarato = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cb_CiudadEntrada = new javax.swing.JComboBox<>();
        cb_CiudadSalida = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        CargarVuelos = new javax.swing.JMenuItem();
        VerRutas = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ciudad de Salida:");

        jLabel2.setText("Ciudad de Entrada:");

        b_VueloCorto.setText("Vuelo mas Corto");
        b_VueloCorto.setAutoscrolls(true);
        b_VueloCorto.setEnabled(false);

        b_VueloBarato.setText("Vuelo mas Barato");
        b_VueloBarato.setEnabled(false);

        jLabel3.setText("Busqueda de Vuelo:");

        cb_CiudadEntrada.setEnabled(false);
        cb_CiudadEntrada.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_CiudadEntradaItemStateChanged(evt);
            }
        });

        cb_CiudadSalida.setEnabled(false);
        cb_CiudadSalida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_CiudadSalidaItemStateChanged(evt);
            }
        });

        jMenuBar1.setBorder(null);

        jMenu1.setText("File");

        CargarVuelos.setText("Cargar Rutas de Vuelos");
        CargarVuelos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarVuelosActionPerformed(evt);
            }
        });
        jMenu1.add(CargarVuelos);

        VerRutas.setText("Ver Rutas");
        VerRutas.setEnabled(false);
        VerRutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerRutasActionPerformed(evt);
            }
        });
        jMenu1.add(VerRutas);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_CiudadSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_CiudadEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(131, 131, 131)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b_VueloCorto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_VueloBarato, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                .addContainerGap(170, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(191, 191, 191))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cb_CiudadSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cb_CiudadEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b_VueloCorto, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_VueloBarato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CargarVuelosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarVuelosActionPerformed
        // TODO add your handling code here:
        Scanner sc = null; 
        File archivo = new File("./Rutas.txt");
        try {
            sc = new Scanner(archivo); 
            String line;
            while(sc.hasNextLine()){
                try {
                    line=sc.nextLine();
                    Scanner sc2 = new Scanner(line);
                    sc2.useDelimiter(",");
                    while(sc2.hasNext()){
                        Lista_Vuelos.add(new Vuelo(sc2.next(),sc2.next(),sc2.next(),sc2.next(), sc2.next()));
                       System.out.println(Lista_Vuelos.get(Lista_Vuelos.size()-1).toString());
                    } // fin while interno  
                } catch (Exception e) {
                    System.out.println("Error while interno");
                }                           
            } // fin del while
        } catch (Exception e) {
        } finally{
            sc.close(); 
        }
        for (Vuelo temp : Lista_Vuelos) { //agrega los vuelos al grafo
            Node node_Salida=null;
            Node node_Entrada=null;
            try {
                if(rutas.getNode(temp.getCiudad_Salida())==null){
                    rutas.addNode(temp.getCiudad_Salida());
                    node_Salida = rutas.getNode(temp.getCiudad_Salida());
                    node_Salida.addAttribute("ui.label", temp.getCiudad_Salida());
                }else{
                    node_Salida = rutas.getNode(temp.getCiudad_Salida());
                }
                if(rutas.getNode(temp.getCiudad_Entrada())==null){
                    rutas.addNode(temp.getCiudad_Entrada());
                    node_Entrada = rutas.getNode(temp.getCiudad_Entrada());
                    node_Entrada.addAttribute("ui.label", temp.getCiudad_Entrada());
                }else{
                    node_Entrada = rutas.getNode(temp.getCiudad_Entrada());
                }
                if(rutas.getEdge(node_Salida.getId()+node_Entrada.getId())==null){
                    rutas.addEdge(node_Salida.getId()+node_Entrada.getId(), node_Salida, node_Entrada, true);
                    rutas.getEdge(node_Salida.getId()+node_Entrada.getId()).addAttribute("ui.label","DISTANCE: "+ Double.toString(temp.getDistancia())+
                            " PRICE: "+ Double.toString(temp.getCosto())+" AIRLINE: "+ temp.getAerolinea());
                } 
                if(rutas.getEdge(node_Entrada.getId()+node_Salida.getId())==null){
                    rutas.addEdge(node_Entrada.getId()+node_Salida.getId(), node_Entrada, node_Salida, true);
                    rutas.getEdge(node_Entrada.getId()+node_Salida.getId()).addAttribute("ui.label","DISTANCE: "+ Double.toString(temp.getDistancia())+
                            " PRICE: "+ Double.toString(temp.getCosto())+" AIRLINE: "+ temp.getAerolinea());
                } 
            } catch (Exception e) {
            }

        }//fin for e
        JOptionPane.showMessageDialog(this, "Se han creado las rutas exitosamente");
        //Make Enabled los botones y combo box
        this.VerRutas.setEnabled(true);
        this.CargarVuelos.setEnabled(false);
        this.cb_CiudadEntrada.setEnabled(true);
        this.cb_CiudadSalida.setEnabled(true);
        
        for (Vuelo temp : Lista_Vuelos) {
            if(!Lista_Ciudades.contains(temp.getCiudad_Salida())){
                Lista_Ciudades.add(temp.getCiudad_Salida());
            }else if(!Lista_Ciudades.contains(temp.getCiudad_Entrada())){
                Lista_Ciudades.add(temp.getCiudad_Entrada());
            }  
        }
        for (String temp : Lista_Ciudades) { //agregar lista de ciudades al combo box
            cb_CiudadSalida.addItem(temp);
            cb_CiudadEntrada.addItem(temp);
        }
    }//GEN-LAST:event_CargarVuelosActionPerformed

    private void VerRutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerRutasActionPerformed
        // TODO add your handling code here:
        Viewer viewer = rutas.display();
        viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.HIDE_ONLY);
    }//GEN-LAST:event_VerRutasActionPerformed

    private void cb_CiudadSalidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_CiudadSalidaItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == 2) {
            String s =  (String) cb_CiudadSalida.getSelectedItem();
            nodoC1 = rutas.getNode(s);
            verificarCiudades();
        }
    }//GEN-LAST:event_cb_CiudadSalidaItemStateChanged

    private void cb_CiudadEntradaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_CiudadEntradaItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == 2) {
            String s =  (String) cb_CiudadEntrada.getSelectedItem();
            nodoC2 = rutas.getNode(s);
            verificarCiudades();
        }
    }//GEN-LAST:event_cb_CiudadEntradaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CargarVuelos;
    private javax.swing.JMenuItem VerRutas;
    private javax.swing.JButton b_VueloBarato;
    private javax.swing.JButton b_VueloCorto;
    private javax.swing.JComboBox<String> cb_CiudadEntrada;
    private javax.swing.JComboBox<String> cb_CiudadSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables

    /**
     * Grafo principal Inicializacion
     */
    Graph rutas = new SingleGraph("Rutas Aereas");
    ArrayList<Vuelo> Lista_Vuelos = new ArrayList();
    ArrayList<String> Lista_Ciudades = new ArrayList();
    
    Node nodoC1=null;
    Node nodoC2=null;
    
    public void verificarCiudades(){
        if(nodoC1!=null && nodoC2!=null){
            if(nodoC1!=nodoC2){
                this.b_VueloBarato.setEnabled(true);
                this.b_VueloCorto.setEnabled(true);
            }else{
                this.b_VueloBarato.setEnabled(false);
                this.b_VueloCorto.setEnabled(false);
            }
        }
    }
    


}
